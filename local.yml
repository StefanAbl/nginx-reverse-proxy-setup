---
- hosts: all
  vars_files:
    - /root/vars.yaml
  tasks:
  - name: install basic packages
    action: >
      {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
    with_items:
      - git
      - nginx

  - name: check if git repo present
    stat:
      path: /root/acme.sh/dnsapi/dns_dynv6.sh
    register: acme_present

  - name: get git repo
    git:
     repo: https://github.com/Neilpang/acme.sh.git
     dest: /root/acme.sh
    when: acme_present.stat.exists == false
  - name: get pull request
    command: 
      cmd: git fetch origin pull/2470/head
      chdir: /root/acme.sh
    when: acme_present.stat.exists == false
  - name: get pull request2
    command: 
      cmd: git checkout -b pullrequest FETCH_HEAD
      chdir: /root/acme.sh
    when: acme_present.stat.exists == false

  - name: add A record
    command:
      cmd: ssh api@dynv6.com -i /root/.ssh/dynv6 hosts {{ host }} records set {{ record }} a addr {{ ip }}

  - name: create cert dir
    file:
      path: /etc/letsencrypt/live/{{record}}.{{host}}/
      state: directory
      owner: www-data
      group: www-data
      mode: 0770
  
  - name: check if cert present
    stat:
      path: /etc/letsencrypt/live/{{record}}.{{host}}/fullchain.pem
    register: cert_present

  # - name: check if cert needs to be renewd
  #   openssl_certificate_info:
  #     path: /etc/letsencrypt/live/{{record}}.{{host}}/fullchain.pem
  #     valid_at: 
  #       -point_1: "+d25"
  #   register: cert_valid
  #   when: cert_present.stat.exists == true

  - name: get cert
    command: /root/acme.sh/acme.sh --issue --dns dns_dynv6 -d {{record}}.{{host}}  --key-file /etc/letsencrypt/live/{{record}}.{{host}}/key.pem --ca-file /etc/letsencrypt/live/{{record}}.{{host}}/ca.pem --cert-file /etc/letsencrypt/live/{{record}}.{{host}}/cert.pem --fullchain-file /etc/letsencrypt/live/{{record}}.{{host}}/fullchain.pem
    environment:
      KEY: "{{key_file}}"
    when: cert_present.stat.exists == false
    register: command_result
    failed_when: not "'--force' in command_result.stdout"
  - debug:
      var: cert_present.stat.exists
  - debug:
      var: command_result

  - name: create dh dir
    file:
      path: /etc/ssl/
      state: directory
      owner: www-data
      group: www-data
      mode: 0770
    register: dh_present
  - name: Generate Diffie-Hellman parameters with the default size (4096 bits)
    openssl_dhparam:
      path: /etc/ssl/dhparams.pem

  - name: check if default conf present
    stat:
      path: /etc/letsencrypt/live/{{record}}.{{host}}/fullchain.pem
    register: default_present
  - name: check if any config present
    find: 
      paths: /etc/nginx/sites-enabled/
    register: config_files
  - debug:
      var: config_files

  - name: remove default config
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    when: default_present.stat.exists == true
  


  - name: copy nginx config template
    template:
      src: proxy.conf
      dest: /etc/nginx/sites-available/{{record}}.{{host}}
      owner: www-data
      group: www-data
      mode: '0664'
      force: yes
  - name: enable the nginx conf
    file:
      src: /etc/nginx/sites-available/{{record}}.{{host}}
      dest: /etc/nginx/sites-enabled/{{record}}.{{host}}
      state: link
      owner: www-data
      group: www-data
      mode: '0664'      
      
  - name: add cronjob for certificates
    cron:
      name: "cert for {{record}}.{{host}}"
      day: "*/15"
      user: root
      job: /root/acme.sh/acme.sh --issue --dns dns_dynv6 -d {{record}}.{{host}}  --key-file /etc/letsencrypt/live/{{record}}.{{host}}/key.pem --ca-file /etc/letsencrypt/live/{{record}}.{{host}}/ca.pem --cert-file /etc/letsencrypt/live/{{record}}.{{host}}/cert.pem --fullchain-file /etc/letsencrypt/live/{{record}}.{{host}}/fullchain.pem
  - name: restart nginx
    service: 
      name: nginx 
      state: restarted